@import "node_modules/bootstrap/scss/mixins";

// =================================================================================================

@mixin c-monospace() {
    font-family: Menlo, Consolas, monospace;
}

@mixin c-filler() {
    position: absolute;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin hit-detection-with-children-only() {
    pointer-events: none;
    a, img, h1, figure, div {pointer-events: auto}
}

// Animation

@mixin transform-slide($direction, $in-or-out) {
    $x-offset: 0;
    $y-offset: 0;
    $adjustment: if($in-or-out == "in", 1, -1);
    @if $direction == "up" {
        $y-offset: 50% * $adjustment;
    } @else if $direction == "down" {
        $y-offset: -50% * $adjustment;
    } @else if $direction == "left" {
        $x-offset: 50% * $adjustment;
    } @else if $direction == "right" {
        $x-offset: -50% * $adjustment;
    }
    transform: translate3d($x-offset, $y-offset, 0);
}

// Shrink / Expand

@mixin shrink-in-start($duration, $delay) {
    transition: transform $duration $ease $delay, opacity $duration $delay;
    transform: scale3d(1.05, 1.05, 1);
    opacity: 0;
}

@mixin expand-in-start($duration, $delay) {
    transition: transform $duration $ease $delay, opacity $duration $delay;
    transform: scale3d(0.95, 0.95, 1);
    opacity: 0;
}

@mixin expand-out-start($duration, $delay) {
    transition: transform $duration $ease $delay, opacity $duration $delay;
    transform: scale3d(1, 1, 1);
    opacity: 1;
}

@mixin shrink-expand-in-end() {
    transform: scale3d(1, 1, 1);
    opacity: 1;
}

@mixin expand-out-end() {
    transform: scale3d(1.05, 1.05, 1);
    opacity: 0;
}

// Slide

@mixin slide-in-start($direction, $duration, $delay: null) {
    transition: transform $duration $ease $delay, opacity $duration $delay;
    @include transform-slide($direction, "in");
    opacity: 0;
}

@mixin slide-in-end($opacity) {
    transform: translate3d(0, 0, 0);
    opacity: $opacity;
}

@mixin slide-out-start($duration, $opacity, $delay: null) {
    transition: transform $duration $ease $delay, opacity $duration $delay;
    transform: translate3d(0, 0, 0);
    opacity: $opacity;
}

@mixin slide-out-end($direction) {
    @include transform-slide($direction, "out");
    opacity: 0;
}

// Fade

//@mixin fade($component, $duration) {
//    .#{$component}-fade-enter,
//    .#{$component}-fade-appear {
//        transition: opacity $duration;
//        opacity: 0;
//    }
//    .#{$component}-fade-enter.#{$component}-fade-enter-active,
//    .#{$component}-fade-appear.#{$component}-fade-appear-active {
//        opacity: 1;
//    }
//    .#{$component}-fade-leave {
//        transition: opacity $duration;
//        opacity: 1;
//    }
//    .#{$component}-fade-leave.#{$component}-fade-leave-active {
//        opacity: 0;
//    }
//}

// Component

@mixin c-detail-main-build-out() {
    .c-media-wrapper {
        @include expand-out-start(
                $c-detail-main-picture-build-duration,
                $c-detail-main-accessory-build-duration / $animation-delay-factor
        );
    }
    .title {
        @include slide-out-start($c-detail-main-accessory-build-duration, $will-stand-out-on-hover-opacity);
    }
    .previous,
    .next {
        @include slide-out-start($c-detail-main-accessory-build-duration, $will-stand-out-on-hover-opacity);
    }
}

@mixin c-detail-main-build-out-active() {
    .c-media-wrapper {
        @include expand-out-end();
    }
    .title {
        @include slide-out-end("up")
    }
    .previous {
        @include slide-out-end("right")
    }
    .next {
        @include slide-out-end("left")
    }
}
